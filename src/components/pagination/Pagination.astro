---
import Button from "@/components/button/Button.astro";
import { getLocaleFromUrl } from "@/js/localeUtils";

interface Props {
	basePath: string;
	prevUrl: string | undefined;
	currPage: number;
	nextUrl: string | undefined;
	lastPage: number;
}

const { prevUrl, currPage, nextUrl, lastPage, basePath } = Astro.props as Props;

function generatePageNumbers(currPage: number, lastPage: number) {
	let startPage = Math.max(1, currPage - 2);
	let endPage = Math.min(lastPage, startPage + 4);

	if (endPage - startPage < 4) {
		startPage = Math.max(1, endPage - 4);
	}

	const pageNumbers = Array.from({ length: endPage - startPage + 1 }, (_, i) => startPage + i);

	if (startPage > 1) {
		if (startPage > 2) {
			pageNumbers.unshift(-1);
		}
		pageNumbers.unshift(1);
	}

	if (endPage < lastPage) {
		if (endPage < lastPage - 1) {
			pageNumbers.push(-1);
		}
		pageNumbers.push(lastPage);
	}

	return pageNumbers;
}

const pageNumbers = generatePageNumbers(currPage, lastPage);
const currLocale = getLocaleFromUrl(Astro.url);

// uncomment this and comment about the above pageNumbers to test the pagination
// const pageNumbers = generatePageNumbers(5, 10);
---

{
	(prevUrl || nextUrl) && (
		<nav aria-label="Blog pages navigation" class="w-full">
			<div class="flex w-full items-center justify-between py-3 md:py-4">
				<div class="flex">
					{prevUrl && (
						<Button variant="outline" arrow="left" href={prevUrl}>
							Prev
						</Button>
					)}
					{!prevUrl && (
						<Button variant="outline" arrow="left" href={prevUrl} class="opacity-50" disabled>
							Prev
						</Button>
					)}
				</div>

				<div class="flex justify-center gap-2 text-center">
					{pageNumbers.map((pageNumber) => {
						if (pageNumber === -1) {
							return (
								<div class="hidden rounded-md p-2 font-medium md:block">
									<div class="flex h-6 w-6 items-center justify-center">...</div>
								</div>
							);
						}

						if (pageNumber === currPage) {
							return (
								<div class="bg-border rounded-md p-2 font-medium">
									<div class="flex h-6 w-6 items-center justify-center">
										{pageNumber.toString()}
									</div>
								</div>
							);
						}

						if (pageNumber === 1) {
							return (
								<a
									href={basePath}
									class="hover:bg-border hidden rounded-md p-2 font-medium transition md:block"
								>
									<div class="flex h-6 w-6 items-center justify-center">
										{pageNumber.toString()}
									</div>
								</a>
							);
						}

						return (
							<a
								href={`${basePath}${pageNumber}/`}
								class="hover:bg-border hidden rounded-md p-2 font-medium transition md:block"
							>
								<div class="flex h-6 w-6 items-center justify-center">{pageNumber.toString()}</div>
							</a>
						);
					}, [])}
				</div>

				<div class="flex justify-end">
					{nextUrl && (
						<Button variant="outline" arrow="right" href={nextUrl}>
							Next
						</Button>
					)}

					{!nextUrl && (
						<Button variant="outline" arrow="right" href={nextUrl} class="opacity-50" disabled>
							Next
						</Button>
					)}
				</div>
			</div>
		</nav>
	)
}