---
import type { MarkdownHeading } from "astro";
import { Image } from "astro:assets";
import { type CollectionEntry, getEntries } from "astro:content";

import Button from "@/components/button/Button.astro";
import Category from "@/components/category/Category.astro";
import RelatedPosts from "@/components/related-posts/RelatedPosts.astro";
import TableOfContents from "@/components/table-of-contents/TableOfContents.astro";
import Tag from "@/components/tag/Tag.astro";
import { getLocaleFromUrl } from "@/js/localeUtils";
import { formatDate } from "@/js/textUtils";

import BaseLayout from "./BaseLayout.astro";

interface Props {
	post: CollectionEntry<"blog">;
	headings: MarkdownHeading[];
}

const { post, headings } = Astro.props as Props;
const { title, description, authors, pubDate, categories, tags, updatedDate, heroImage } =
	post.data;

const currLocale = getLocaleFromUrl(Astro.url);
const authorsData = await getEntries(authors);
---

<BaseLayout
	type="blog"
	title={title}
	description={description}
	image={heroImage}
	authorsData={authorsData}
	postFrontmatter={post.data}
>
	<article class="site-container mt-24 xl:px-16">
		<!-- Blog post info -->
		<div class="flex w-full flex-col justify-center text-center">
			<div class="mx-auto flex w-full max-w-[800px] flex-col justify-center">
				<div class="flex justify-center gap-4">
					{categories.map((category) => <Category category={category} />)}
				</div>

				<h1 class="h1 mt-4">{title}</h1>

				<p class="text-muted-foreground mt-4 md:text-lg">{description}</p>
			</div>

			<!-- blog post main image -->
			{
				heroImage && (
					<div class="mt-12 overflow-hidden rounded-xl md:rounded-2xl">
						<Image
							src={heroImage}
							alt={`Cover for ${title}`}
							width={1250}
							densities={[1.5, 2]}
							quality="high"
							class="max-h-[70vh] w-full rounded-xl object-cover md:rounded-2xl"
							loading="eager"
							format="webp"
							transition:name={`post-image-${post.id}`}
						/>
					</div>
				)
			}
		</div>

		<!-- Content Section -->
		<div class="py-12">
			<div class="lg:grid lg:grid-cols-[1fr_300px] lg:gap-8 xl:grid-cols-[1fr_400px] xl:gap-12">
				<!-- Main Content -->
				<div class="mr-auto w-full max-w-[864px]">
					<!-- Article Meta -->
					<div class="mb-8 flex items-center justify-between border-b pb-8">
						<div class="flex items-center gap-4">
							{
								authorsData.map((author) => (
									<a href={author.data.authorLink} class="group flex items-center gap-3">
										<div class="size-12 overflow-hidden rounded-full border">
											<Image
												src={author.data.avatar}
												alt={author.data.name}
												loading="eager"
												width={100}
												class="h-full w-full object-cover"
											/>
										</div>
										<div>
											<span class="group-hover:text-primary block font-medium transition-colors">
												{author.data.name}
											</span>
											<time datetime={pubDate.toISOString()} class="text-sm opacity-70">
												{formatDate(pubDate, currLocale)}
											</time>
										</div>
									</a>
								))
							}
						</div>

						{
							updatedDate && (
								<div class="text-muted-foreground text-sm">
									Updated: {formatDate(updatedDate, currLocale)}
								</div>
							)
						}
					</div>

					<!-- Article Content -->
					<div class="markdown-content">
						<slot />
					</div>
				</div>
				<!-- Sidebar -->
				<aside class="hidden lg:block">
					<div class="sticky top-24 overflow-y-auto">
						<div class="h-[calc(100vh-(var(--spacing)*_26))]">
							<h3 class="h3 mb-4">Table of Contents</h3>
							<TableOfContents headings={headings} />
						</div>
					</div>
				</aside>
			</div>
			<div class="mt-12 flex items-center justify-between border-t pt-6">
				{
					tags && tags.length > 0 && (
						<div class="flex flex-wrap items-center gap-2">
							<span>Tags:</span>
							{tags.map((tag: string) => (
								<Tag tag={tag} />
							))}
						</div>
					)
				}
				<Button variant="primary" href={"/blog"}>
					Back to all posts
				</Button>
			</div>
			<div class="mt-12">
				<h3 class="h3 mb-4">Related posts</h3>
				<div class="grid gap-x-4 gap-y-8 sm:grid-cols-2 lg:grid-cols-3">
					<RelatedPosts post={post} />
				</div>
			</div>
		</div>
	</article>
</BaseLayout>